import * as React from "https://cdn.skypack.dev/react@17.0.1";
// Redux:
const ADD = 'ADD';

const addMessage = (message) => {
  return {
    type: ADD,
    message: message
  }
};

const messageReducer = (state = [], action) => {
  switch (action.type) {
    case ADD:
      return [
        ...state,
        action.message
      ];
    default:
      return state;
  }
};

const store = Redux.createStore(messageReducer);

// React:
class Presentational extends React.Component {
  constructor(props) {
    super(props);
    this.state = {
      input: ''
    }
    this.handleChange = this.handleChange.bind(this);
    this.submitMessage = this.submitMessage.bind(this);
  }
  handleChange(event) {
    this.setState({
      input: event.target.value
    });
  }
  submitMessage() {
    this.props.submitNewMessage(this.state.input);
    this.setState({
      input: ''
    });
  }
  render() {
    return (
      <div id="quote-box">
      <div id="text">
        
      </div>
        <div id="text">
        random quote
      </div>
        <div id="author">
         random author
      </div>
        
        <div id="flex">
          <div id="new-quote" 
            onClick={()=>console.log('clickedd')} id="new-queto">
            New Quote
          </div>
          <a href="twitter.com/intent/tweet" id="tweet-quote">twitter</a>
        </div>
      </div>
    );
  }
};

// React-Redux
const Provider = ReactRedux.Provider;
const connect = ReactRedux.connect;

const mapStateToProps = (state) => {
  return {messages: state}
};

const mapDispatchToProps = (dispatch) => {
  return {
    submitNewMessage: (message) => {
      dispatch(addMessage(message))
    }
  }
};

const Container = connect(mapStateToProps, mapDispatchToProps)(Presentational);

class AppWrapper extends React.Component {
  render() {
    return (
      <Provider store={store}>
        <Container/>
      </Provider>
    );
  }
};

ReactDOM.render(<AppWrapper />, document.getElementById('app'));

@import url("https://fonts.googleapis.com/css?family=Lato:400,400i,700");
* {
  font-family: Lato, sans-serif;
  box-sizing: border-box;
}
body {
  
}
#quote-box{
  width:40rem;
  margin:auto;
  border-radius:1rem;
  padding: 2rem;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: space-between;
background: #435467;
  color: white;
  #tweet-quote{
        padding:1rem;
    color: red;
    text-decoration: none;
  }
  #author{
    padding:1rem;
  }
#new-queto{
  background: #050606;
  padding:1rem .7rem;
  border-radius: .7rem;
    color: red;
    cursor: pointer;
  }
  #flex{
    margin:1rem;
    display:flex;
    justify-content: space-between;
  }
}
